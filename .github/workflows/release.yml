name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: read

jobs:
  build-and-publish-gem:
    name: Build & Publish Gem
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true

      - name: Build gem
        run: |
          gem build pretty-git.gemspec
          ls -la *.gem

      - name: Extract versions (tag vs gem)
        id: vers
        run: |
          TAG=${GITHUB_REF##*/}
          TAG_VER=${TAG#v}
          echo "tag=$TAG_VER" >> $GITHUB_OUTPUT
          # Read Ruby version constant
          GEM_VER=$(ruby -e "require_relative 'lib/pretty_git/version'; puts PrettyGit::VERSION")
          echo "gem=$GEM_VER" >> $GITHUB_OUTPUT
          echo "Tag version: $TAG_VER"
          echo "Gem version: $GEM_VER"

      - name: Publish to RubyGems
        if: ${{ secrets.RUBYGEMS_API_KEY != '' && steps.vers.outputs.tag == steps.vers.outputs.gem }}
        env:
          RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
        run: |
          GEM_FILE=$(ls -1 pretty-git-*.gem | tail -n1)
          echo "Pushing $GEM_FILE to RubyGems"
          mkdir -p ~/.gem
          printf ":rubygems_api_key: %s\n" "$RUBYGEMS_API_KEY" > ~/.gem/credentials
          chmod 0600 ~/.gem/credentials
          gem push "$GEM_FILE" --host https://rubygems.org

      - name: Upload artifact (gem)
        uses: actions/upload-artifact@v4
        with:
          name: gem
          path: pretty-git-*.gem

  update-homebrew-tap:
    name: Update Homebrew Tap
    needs: build-and-publish-gem
    runs-on: ubuntu-latest
    if: ${{ secrets.TAP_GH_TOKEN != '' && vars.TAP_REPO != '' }}
    env:
      TAP_REPO: ${{ vars.TAP_REPO }} # e.g. MikoMikocchi/homebrew-tap
      TAP_BRANCH: ${{ vars.TAP_BRANCH || 'main' }}
    steps:
      - name: Check version match
        id: guard
        run: |
          TAG=${GITHUB_REF##*/}
          TAG_VER=${TAG#v}
          echo "tag=$TAG_VER" >> $GITHUB_OUTPUT
          exit 0

      - name: Download gem artifact
        uses: actions/download-artifact@v4
        with:
          name: gem
          path: dist

      - name: Compute SHA256
        id: shasum
        run: |
          GEM_FILE=$(ls -1 dist/pretty-git-*.gem | tail -n1)
          echo "gem_file=$GEM_FILE" >> $GITHUB_OUTPUT
          echo "sha256=$(shasum -a 256 \"$GEM_FILE\" | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Extract gem version
        id: ver
        run: |
          # Read gem version from gemspec file name (artifact)
          NAME=$(basename "$(ls -1 dist/pretty-git-*.gem | tail -n1)")
          VERSION=${NAME#pretty-git-}
          VERSION=${VERSION%.gem}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Clone tap repository
        run: |
          git clone "https://github.com/${TAP_REPO}.git" tap
          cd tap
          git checkout "$TAP_BRANCH" || git checkout -b "$TAP_BRANCH"

      - name: Update formula
        run: |
          set -euo pipefail
          FORMULA=tap/Formula/pretty-git.rb
          URL="https://rubygems.org/downloads/pretty-git-${{ steps.ver.outputs.version }}.gem"
          SHA="${{ steps.shasum.outputs.sha256 }}"
          # Replace url and sha256
          sed -i.bak -E "s|^\s*url\s+\".+\"|  url \"$URL\"|" "$FORMULA"
          sed -i.bak -E "s|^\s*sha256\s+\"[a-f0-9]+\"|  sha256 \"$SHA\"|" "$FORMULA"
          # Bump revision if present, else add revision 1
          if grep -q "^\s*revision\s+" "$FORMULA"; then
            REV=$(grep -E "^\s*revision\s+" "$FORMULA" | awk '{print $2}')
            NEWREV=$((REV+1))
            sed -i.bak -E "s|^(\s*revision\s+)\d+|\\1$NEWREV|" "$FORMULA"
          else
            # insert after license line
            awk '1; /license / && !p { print "  revision 1"; p=1 }' "$FORMULA" > "$FORMULA.new" && mv "$FORMULA.new" "$FORMULA"
          fi
          rm -f "$FORMULA.bak"

      - name: Create PR to tap
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.TAP_GH_TOKEN }}
          path: tap
          commit-message: "pretty-git: update to ${{ steps.ver.outputs.version }}"
          branch: "bot/pretty-git-${{ steps.ver.outputs.version }}"
          title: "pretty-git: update to ${{ steps.ver.outputs.version }}"
          body: |
            Automated update of formula for pretty-git ${{ steps.ver.outputs.version }}.
            - url: https://rubygems.org/downloads/pretty-git-${{ steps.ver.outputs.version }}.gem
            - sha256: ${{ steps.shasum.outputs.sha256 }}
            This PR was generated by the Release workflow.
